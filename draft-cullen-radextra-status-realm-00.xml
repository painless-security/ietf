<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
	  <!ENTITY rfc1321 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1321.xml'>
	  <!ENTITY rfc2119 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml'>
	  <!ENTITY rfc2865 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2865.xml'>
          <!ENTITY rfc2866 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2866.xml'>
          <!ENTITY rfc2869 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2869.xml'>
	  <!ENTITY rfc3579 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3579.xml'>
	  <!ENTITY rfc4270 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4270.xml'>
	  <!ENTITY rfc4668 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4668.xml'>
	  <!ENTITY rfc4669 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4669.xml'>
	  <!ENTITY rfc4670 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4670.xml'>
	  <!ENTITY rfc4671 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4671.xml'>
	  <!ENTITY rfc5997 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5997.xml'>
	  <!ENTITY rfc7991 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7991.xml'>
	  <!ENTITY rfc8044 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8044.xml'>
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes"?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="6"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="std" consensus="true" ipr="trust200902" docName="draft-cullen-radextra-status-realm-00">
  <front>
    <title abbrev="Status-Realm for RADIUS">
      Status-Realm for the Remote Authentication Dial-In User Service (RADIUS)
    </title>

    <author initials="M." surname="Cullen" fullname="Margaret Cullen">
      <organization>Painless Security</organization>
      <address>
        <phone>+1 (781)405-7464</phone>
        <email>margaret@painless-security.com</email>
      </address>
    </author>

    <author initials="A." surname="DeKok" fullname="Alan DeKok">
      <organization>FreeRADIUS</organization>
      <address>
        <email>aland@freeradius.org</email>
      </address>
    </author>

    <date day="23" month="October" year="2022"/>

    <area>SEC</area>

    <workgroup>radextra BOF</workgroup>

    <abstract>
      <t>
	This document describes an extension to the Remote
	Authentication Dial-In User Service (RADIUS) protocol,
	enabling clients to query the status of a RADIUS Identity
	Provider (IDP) realm across a fabric of RADIUS proxies.  
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
	This document describes an extension to the Remote
	Authentication Dial-In User Service (RADIUS) protocol <xref
	target="RFC2865"/>, enabling clients to query the status of a
	RADIUS Identity Provider (IDP) realm across a fabric of RADIUS
	proxies.  It also defines a Max-Hop-Count attribute to limit
	the number of hops that a Status-Realm packet will traverse.
      </t>
    </section>

    <section title="Requirements Notation">
      <t>
	The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
	NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
	"OPTIONAL" in this document are to be interpreted as described
	in <xref target="RFC2119"/>.
      </t>
    </section>

    <section title="Overview">
      <t>
	Status-Realm-Request packets are sent by a RADIUS client to a
	RADIUS server in order to query the reachability and status of
	a particular RADIUS IDP realm.  In some cases, the
	Status-Realm client may be able to reach an IDP Server for the
	realm directly.  In other cases, the Status-Realm client will
	send the initial Status-Realm request to a RADIUS proxy, which
	will forward the Status-Realm request toward the indicated
	realm.
      </t>
      <t>
	Status-Realm-Requests may be sent to the RADIUS authentication
	port or the RADIUS accounting port of the first-hop RADIUS
	server.  RADIUS proxies should forward Status-Realm-Requests
	received on the authentication port to the authentication port
	of the next-hop RADIUS server.  Status-Realm-Requests received
	on the accounting port should, similarly, be forwarded to the
	accounting port of the next-hop server.
      </t>
      <t>
	When a Status-Realm-Request packet is received by an IDP
	Server for the indicated realm, the IDP Server MUST respond
	with a Status-Realm-Response packet.
      </t>
      <t>
	If an intermediate RADIUS proxy is unable to forward a
	Status-Realm-Request packet towards an IDP Server, either
	because it has no information about how to reach the indicated
	realm, or because there are no reachable servers for that
	realm, the RADIUS proxy SHOULD return a Status-Realm-Response
	packet in response.
      </t>
      <t>
	Status-Realm packets allow the sender to determine the
	reachability and status of an IDP realm, without requiring a
	direct RADIUS connection to a RADIUS Server for the IDP realm,
	and without requiring credentials for an authorized user
	within that realm.  This can be useful for debugging RADIUS
	authentication issues, identifying routing issues within a
	RADIUS proxy fabric, or monitoring IDP realm availability.
      </t>
      <t>
	This document defines two new RADIUS Packet Type Codes:
	<ul>
	  <li>
	    Status-Realm-Request (TBD)
	  </li>
	  <li>
	    Status-Realm-Response (TBD)
	  </li>
	</ul>
      </t>
      <t>
	This document also defines two new RADIUS Attributes:
	<ul>
	  <li>
	    Status-Realm-Response-Code (TBD)
	  </li>
	  <li>
	    Max-Hop-Count (TBD)
	  </li>
	</ul>
      </t>
    </section>
    
    <section title="Packet Formats">
      <t>
	This section describes the RADIUS packet formats for
	Status-Realm-Request and Status-Realm-Response packets.
	Status-Realm-Requests are sent in the same format, whether
	they are sent to the authentication port or the accounting
	port.
      </t>
	  
      <section title="Status-Realm-Request Packet">
	<t>
	  Status-Realm-Request packets reuse the RADIUS packet format,
	  with the fields and values for those fields as defined in
	  <xref target="RFC2865"/>, Section 3.  
	</t>
	<t>
	  A Status-Realm-Request packet MUST include a
	  Message-Authenticator attribute, as defined in <xref
	  target="RFC2869"/>, section 5.14. The Message-Authenticator
	  provides per-packet authentication and integrity protection.
	  The Authenticator field of a Status-Realm-Request packet
	  MUST be generated using the same method as that used for the
	  Request Authenticator field of Access-Request packets.
	</t>
	<t>
	  Status-Realm-Request packets MAY include NAS-Identifier, and
	  one of NAS-IP-Address or NAS-IPv6-Address.  These attributes
	  are not necessary for the operation of Status-Realm, but may
	  be useful information to a server that receives those
	  packets.  A Status-Realm-Request packet MUST also contain a
	  Max-Hop-Count attribute, as defined below.
	</t>
	<t>
	  Status-Realm-Request packets MUST NOT contain user
	  authentication credentials (such as User-Name,
	  User-Password, CHAP-Password, EAP-Message) or User or NAS
	  accounting attributes (such as Acct-Session-Id,
	  Acct-Status-Type, Acct-Input-Octets).
	</t>
      </section>
            
      <section title="Status-Realm-Response Packet">
	<t>
	  Status-Realm-Response packets reuse the RADIUS packet
	  format, with the fields and values for those fields as
	  defined in <xref target="RFC2865"/>, Section 3.
	</t>
	<t>
	  The Response Authenticator field of a
	  Status-Realm-Response packet MUST be generated using the
	  same method used for calculating the Response Authenticator
	  of an Access-Accept or an Access-Reject sent in response to
	  an Access-Request, with the Status-Realm-Request Request
	  Authenticator taking the place of the Access-Request Request
	  Authenticator.
	</t>
	<t>
	  The Status-Realm-Response packet MUST contain a
	  Status-Realm-Response-Code attribute, as defined below,
	  indicating the results of the Status-Realm request.
	</t>
	<t>
	  The Status-Realm-Response packet MAY contain the following
	  attributes: Reply-Message, Message-Authenticator,
	  Max-Hop-Count.
	</t>
	<t>
	  Note that when a server responds to a Status-Realm-Request
	  packet, it MUST NOT send more than one Status-Realm-Response
	  packet.
	</t>
      </section>
    </section>

    <section title="Status-Realm-Response-Code Attribute">
      <t>
	This section defines a new RADIUS attribute,
	Status-Realm-Response-Code (TBD).  The value of the
	Status-Realm-Response-Code attribute is an integer, as defined
	in <xref target="RFC8044"/>, Section 3.1.  
      </t>
      <t>
	This attribute is used to return a response code in
	Status-Realm-Response packets.  The following values are
	defined for this attribute:
      </t>
      <t>
	<artwork>
   0        The target IDP realm is available
      
   1        No proxy route to the target IDP realm
   2        No available servers for the target IDP realm
   3        The target IDP realm is missing or invalid
   4        Max-Hop-Count exceeded

   5-255    Unspecified error, the IDP is unreachable

   257      Administratively prohibited, target IDP realm status
            unknown
   258      Internal error, target IDP realm status unknown
	       
   259-511  Unspecified error, target IDP realm status unknown

   512+     Reserved
	</artwork>
      </t>
    </section>
    
    <section title="Max-Hop-Count Attribute">
      <t>
	This section defines a new RADIUS attribute, Max-Hop-Count
	(TBD).  The value of the Max-Hop-Count attribute is an
	integer, as defined in <xref target="RFC8044"/>, Section 3.1.
	Valid values are small positive integers, 0 to 255.
      </t>
      <t>
	This attribute is used to limit the number of RADIUS servers
	that will proxy a packet before it reaches its final
	destination.  When a RADIUS server that implements the
	Max-Hop-Count Attribute determines that it wants to proxy a
	RADIUS Request to another RADIUS Server, it will check the
	Max-Hop-Count attribute.  If the Max-Hop-Count attribute is
	present and the value is zero, the Request MUST NOT be
	forwarded and an error response SHOULD be returned, as
	appropriate to the request type.  If the Max-Hop-Count is
	greater than zero, the proxy server MUST decrement the hop
	count by 1 before forwarding the request.
      </t>
      <t>
	In the context of Status-Realm-Requests, this attribute can be
	used to implement "traceroute-like" functionality.  By
	starting with a Max-Hop-Count value of O, and incrementing the
	value for each new request until the target IDP realm is
	reached, the client can receive a series of error responses
	from the proxies on the route to a given IDP realm.
      </t>
      <t>
	This option also has potential value in other situations, such
	as limiting the damage caused by RADIUS proxy loops.  It is
	therefore possible that a RADIUS proxy will support the
	Max-Hop-Count attribute without supporting
	Status-Realm-Requests.
      </t>
    </section>
    
    <section title="Implementation Notes">
      <t>
	This section describes implementation details and requirements
	for RADIUS clients and servers that support Status-Realm-Requests.
      </t>
      
      <section title="Client Requirements">
	<t>
	  When Status-Realm-Request packets are sent from a client,
	  they MUST NOT be retransmitted.  Instead, the Identity field
	  MUST be changed every time a packet is transmitted.  The old
	  packet should be discarded, and a new Status-Realm-Request
	  packet should be generated and sent, with new Identity and
	  Authenticator fields.
	</t>
	<t>
	  Clients MUST include the Message-Authenticator attribute in
	  all Status-Realm-Request packets.  Failure to do so would
	  mean that the packets could be trivially spoofed, leading to
	  potential denial-of-service (DoS) attacks.
	</t>
	<t>
	  The client MUST include a User-Name attribute in the
	  request.  The "user" portion of the username SHOULD be
	  omitted.  The "realm" portion of the username is the
	  target IDP realm for the Status-Realm request.
	</t>
	<t>
	  Clients that support Status-Realm-Requests SHOULD allow a
	  user or administrator to set or configure the Count value of
	  the Max-Hop-Count Attribute described above.  If a different
	  value is not indicated, the client MAY include a
	  Max-Hop-Count attribute with a Count value of 64 in the
	  Status-Realm-Request packet to prevent the possibility that
	  Status-Realm-Requests will loop indefinitely.
	</t>
	<t>
	  The client MAY increment packet counters as a result of
	  sending a Status-Realm-Resquest or receiving a
	  Status-Realm-Response.  The client MUST NOT perform any
	  other action that is normally performed when it receives a
	  Response packet, such as permitting a user to have login
	  access to a port.
	</t>
	<t>
	  Clients MAY send Status-Realm-Request packets to the RADIUS
	  destination ports from the same source port(s) used to send
	  other Request packets.  Other clients MAY choose to send
	  Status-Realm-Request packets from a unique source port that
	  is not used to send other Request packets.
	</t>
	<t>
	  In the case where a client sends a Status-Realm-Request
	  packets from a source port also used to send other Request
	  packets, the Identifier field MUST be unique across all
	  outstanding Request packets for that source port,
	  independent of the value of the RADIUS Code field for those
	  outstanding requests.  Once the client has either received a
	  corresponding Status-Realm-Response packet or determined
	  that the Status-Realm-Request has timed out, it may reuse
	  the Identifier in another Request packet.
	</t>
	<t>
	  The client MUST validate the Response Authenticator in the
	  Status-Realm-Response.  If the Response Authenticator is not
	  valid, the packet MUST be silently discarded.  If the
	  Response Authenticator is valid, then the packet MUST be
	  deemed to be a valid response.
	</t>
      </section>
      
      <section title="Server Requirements">
	<t>
	  Servers SHOULD permit administrators to globally enable or
	  disable the acceptance of Status-Realm packets.  The default
	  SHOULD be that acceptance is enabled.  Servers SHOULD also
	  permit administrators to enable or disable acceptance of
	  Status-Realm packets on a per-client basis.  The default
	  SHOULD be that acceptance is enabled. 
	</t>
	<t>
	  If a server does not support Status-Realm-Request packets,
	  or is configured not to respond to them, then it MUST
	  silently discard the packet.  If a server receives a
	  Status-Realm-Request packet from a client from which it is
	  configured not to accept Status-Realm-Requests, then it
	  MUST silently discard the packet.
	</t>
	<t>
	  If a server supports Status-Realm-Requests, is
	  configured to respond to them, and receives a
	  Status-Realm-Request packet from a permitted client, it MUST
	  first validate the Message-Authenticator attribute as
	  defined in <xref target="RFC3579"/>, Section 3.2.  Packets
	  failing that validation MUST be silently discarded.
	</t>
	<t>
	  If the Status-Realm-Request passes Message-Authenticator
	  validation, then the server should examine the "realm"
	  portion of the User-Name attribute to determine if the
	  target IDP realm matches a local realm served by the server.
	  If it does match a local realm, the server should send a
	  Status-Realm-Response packet indicating that the target IDP
	  realm is reachable (Status-Server-Response-Code = 0).
	</t>
	<t>
	  If the target IDP realm does not match a local realm, then
	  the server should determine whether it is configured to
	  proxy packets towards the target IDP realm.  If so, the
	  server should implement the Proxy Server Requirements,
	  below. Servers SHOULD ignore the value of the "user" portion
	  of the User-Name attribute, if any.
	</t>
	<t>
	  Servers SHOULD NOT discard Status-Realm packets merely
	  because they have recently sent the client a response
	  packet.  The query may have originated from an administrator
	  who does not have access to the response packet stream or
	  one who is interested in obtaining additional information
	  about the server.
	</t>
	<t>
	  The server MAY decide to send an error response to a
	  Status-Realm-Request packet based on local-site policy.  For
	  example, a server that is running but is unable to perform
	  its normal duties SHOULD send a Status-Realm-Response packet
	  indicating an internal error (Status-Server-Response-Code =
	  257).  This situation can happen, for example, when a server
	  requires access to a database for normal operation, but the
	  connection to that database is down.  Or, it may happen when
	  the accepted load on the server is lower than the current
	  load.
	</t>
	<t>
	  The server MAY increment packet counters or create log
	  entries as a result of receiving a Status-Realm-Request
	  packet or sending a Status-Realm-Response packet.  The
	  server SHOULD NOT perform any other action that is normally
	  performed when it receives a Request packet, other than
	  sending a Response packet.
	</t>
	<t>
	  If the Status-Realm-Request packet includes a Max-Hop-Count
	  attribute, that attribute (with it's current value) MUST be
	  returned in any corresponding Status-Realm-Response packet.
	</t>
	<t>
	  Note that <xref target="RFC2865"/>, Section 3, defines a
	  number of RADIUS Codes, but does not make statements about
	  which Codes are valid for port 1812.  In contrast, <xref
	  target="RFC2866"/>, Section 3, specifies that only RADIUS
	  Accounting packets are to be sent to port 1813.  This
	  specification is compatible with the standards-track
	  specification <xref target="RFC2865"/>, as it defines a new
	  Message Type Code for packets to port 1812.  This
	  specification is not compatible with the informational
	  document <xref target="RFC2866"/>, as it adds a new Code
	  (Status-Realm-Request) that is valid for port 1813.
	</t>
      </section>
      
      <section title="Proxy Server Requirements">
	<t>
	  Many RADIUS servers act as RADIUS proxies, forwarding
	  requests to other RADIUS servers.  Such servers SHOULD proxy
	  Status-Realm-Request packets to enable clients to determine
	  the status of IDP Realms that are not directly connected to
	  the client.  
	</t>
	<t>
	  RADIUS proxies that support Status-Realm-Requests MUST
	  support the Max-Hop-Count attribute defined above.  Before
	  forwarding a Status-Realm-Request packet, a proxy MUST check
	  the Max-Hop-Count Attribute.  If the Max-Hop-Count attribute
	  is present and the Count is zero (0), the proxy MUST send a
	  Status-Realm-Response indicating that the hop count has been
	  exceeded (Status-Server-Response-Code = 4), and MUST NOT
	  forward the packet.  If the Max-Hop-Count attribute is
	  present, and the Count value is not zero, the proxy MUST
	  decrement the Max-Hop-Count value before forwarding the
	  packet.
	</t>
	<t>
	  The RADIUS proxy MUST check the "realm" portion of the
	  User-Name attribute in the Status-Realm-Request to determine
	  the target IDP realm for the request.  If the target IDP
	  realm is missing or malformed, the RADIUS proxy MUST send a
	  Status-Realm-Response indicating an invalid realm
	  (Status-Server-Response-Code = 3).  If the realm is properly
	  formed, the Status-Realm-Request packet should be proxied
	  toward the target IDP realm, using the same next-hop RADIUS
	  server that the proxy server would use for other request
	  packets received on the same port.
	</t>
	<t>
	  In some cases, a RADIUS proxy may not have an available
	  next-hop RADIUS server for the target IDP realm. In that
	  case, the RADIUS proxy server MUST send a
	  Status-Realm-Response packet indicating that there is no
	  proxy route to the target IDP realm
	  (Status-Server-Response-Code = 1).
	</t>
	<t>
	  In cases where a RADIUS proxy is configured to have a direct
	  connection to the RADIUS server(s) of the target IDP realm,
	  but is configured not to forward Status-Realm-Request
	  packets to the target IDP server(s), the proxy MAY use other
	  methods to determine the status of the target IDP realm
	  (such as Status-Server packets or recent Access-Request
	  state information), and send a Status-Realm-Response
	  indicating the determined state of the target IDP realm
	  (Status-Server-Response-Code = 0 or 2).  If the proxy is
	  configured not to forward Status-Realm-Request packet to the
	  target IDP realm and does not have other methods to detect
	  the status of the target IDP realm, it SHOULD return a
	  Status-Realm-Response packet indicating that the request is
	  administrative prohibited (Status-Server-Response-Code =
	  257).
	</t>
	<t>
	  If the Status-Realm-Request packet includes a Max-Hop-Count
	  attribute, that attribute (with it's current value) MUST be
	  returned in any corresponding Status-Realm-Response packet.
	</t>
      </section>
    </section>

    <section title="Status-Realm-Request Packet Flow Examples">
      <t>
	There is an initial implementation of this mechanism available
	here:
      </t>
      <t>
	https://github.com/alandekok/freeradius-server/tree/Status-Realm
      </t>
      <t>
	Message exchange examples are TBD.
      </t>
    </section>
    
    <section title="Management Information Base (MIB) Considerations">
      <t>
	Status-Realm-Request packets are sent to the defined RADIUS
	ports, so they can affect the <xref target="RFC4669"/> and
	<xref target="RFC4671"/> RADIUS server MIB modules.  <xref
	target="RFC4669"/> defines a counter named
	radiusAuthServTotalUnknownTypes that counts the number of
	RADIUS packets of unknown type that were received.  <xref
	target="RFC4671"/> defines a similar counter named
	radiusAccServTotalUnknownTypes.  Implementations not
	supporting Status-Realm-Requests or implementations that are
	configured not to respond to Status-Realm-Request packets MUST
	use these counters to track received Status-Realm packets.
      </t>
      <t>
	If, however, Status-Realm-Requests are supported and the server
	is configured to respond as described above, then the counters
	defined in <xref target="RFC4669"/> and <xref
	target="RFC4671"/> MUST NOT be used to track
	Status-Realm-Request or Status-Realm-Response packets.  That
	is, when a server fully implements Status-Realm, the counters
	defined in <xref target="RFC4669"/> and <xref
	target="RFC4671"/> MUST be unaffected by the transmission or
	reception of packets relating to Status-Realm-Requests.
      </t>
      <t>
	If a server supports Status-Realm-Request and the <xref
	target="RFC4669"/> or <xref target="RFC4671"/> MIB modules,
	then it SHOULD also support vendor-specific MIB extensions
	dedicated solely to tracking Status-Realm-Request and
	Status-Realm-Response packets.  Any definition of the server
	MIB modules for Status-Realm-Requests is outside of the scope
	of this document.
      </t>
    </section>

    <section title="Interaction with RADIUS Client MIB Modules">
      <t>
	Clients implementing Status-Realm-Request MUST NOT increment
	<xref target="RFC4668"/> or <xref target="RFC4670"/> counters
	upon reception of Status-Realm-Response packets.  That is,
	when a client fully implements Status-Realm-Request, the counters
	defined in <xref target="RFC4668"/> and <xref
	target="RFC4670"/> MUST be unaffected by the transmission or
	reception of packets relating to Status-Realm.
      </t>
      <t>
	If an implementation supports Status-Realm-Request and the <xref
	target="RFC4668"/> or <xref target="RFC4670"/> MIB modules,
	then it SHOULD also support vendor-specific MIB extensions
	dedicated solely to tracking Status-Realm requests and
	responses.  Any definition of the client MIB modules for
	Status-Realm-Requests is outside of the scope of this document.
      </t>
    </section>

    <section title="Table of Attributes">
       <t>
	The following table provides a guide to which attributes may
	be found in Status-Realm-Request and Status-Realm-Response
	packets, and in what quantity.  Attributes other than the ones
	listed below SHOULD NOT be found in a Status-Realm-Request
	packet.
      </t>
      <t>
	<artwork>
   Status-      Status-
   Realm-       Realm-
   Request      Response

   1            1              1      User-Name
   0            0              2      User-Password
   0            0              3      CHAP-Password
   0-1          0              4      NAS-IP-Address (Note 1)
   0            0+            18      Reply-Message
   0+           0+            26      Vendor-Specific
   0-1          0             32      NAS-Identifier (Note 1)
   0            0             79      EAP-Message
   1            0-1           80      Message-Authenticator
   0-1          0             95      NAS-IPv6-Address (Note 1)
   0            1             (TBD)   Status-Realm-Response-Code
   1            1             (TBD)   Max-Hop-Count (see above)
   0            0             103-121 Digest-*
	</artwork>
      </t>
      <t>
	Note 1: Status-Realm-Request packet SHOULD contain one of
	(NAS-IP-Address or NAS-IPv6-Address), or NAS-Identifier, or
	both NAS-Identifier and one of (NAS-IP-Address or
	NAS-IPv6-Address).
      </t>
      <t>
	The following table defines the meaning of the table entries
	included above:
      </t>
      <t>
	<artwork>
   0     This attribute MUST NOT be present in packet.
   0+    Zero or more instances of this attribute MAY be present in
         the packet.
   0-1   Zero or one instance of this attribute MAY be present in
         the packet.
   1     Exactly one instance of this attribute MUST be present in
         the packet.
	</artwork>
      </t>
    </section>
    
    <section title="IANA Considerations">
      <t>
	This document defines the Status-Realm-Request (TBD) and the
	Status-Realm-Response (TBD) RADIUS Packet Type Codes, both of which
	should be assigned by IANA from the Unassigned block of RADIUS
	Packet Type Codes.
      </t>
      <t>
	This document also defines two new RADIUS attributes,
	Max-Hop-Count (TBD) and Status-Realm-Response-Code (TBD),
	which should be assigned by IANA from an Unassigned block of
	RADIUS Attribute Types, such as the Unassigned block for
	Extended-Attribute-1.
      </t>
    </section>

    <section title="Security Considerations">
      <t>
	Status-Realm-Request packets are similar to Access-Request
	packets, and are therefore subject to the same security
	considerations as described in <xref target="RFC2865"/>,
	Section 8.  Status-Realm packets also use the
	Message-Authenticator attribute, and are therefore subject to
	the same security considerations as <xref target="RFC3579"/>,
	Section 4.
      </t>
      <t>
	We reiterate that all Status-Realm-Request packets MUST
	contain a Message-Authenticator.  Servers not checking the
	Message-Authenticator attribute could respond to Status-Realm
	packets from an attacker, potentially enabling a reflected DoS
	attack onto a real client.
      </t>
      <t>
	Where this document differs from <xref target="RFC2865"/> is
	that it defines a new request/response method in RADIUS: the
	Status-Realm-Request and Status-Realm-Response. The
	Status-Realm-Request is similar to the previously described
	and widely implemented Status-Server message <xref
	target="RFC5997"/>, and no additional security considerations
	are known to relate to the implementation or use of
	Status-Server.  This option differs from Status-Server because
	it is forwarded through proxies, so it can be sent to a RADIUS
	IDP Server that does not have a direct connection to the
	Status-Realm client.  However, Access-Request packets are also
	forwarded, and there should be no additional attacks other
	than those incurred by forwarding Status-Realm-Request packets.
      </t>
      <t>
	Attacks on cryptographic hashes are well known <xref
	target="RFC4270"/> and getting better with time.  RADIUS uses
	the MD5 hash <xref target="RFC1321"/> for packet
	authentication and attribute obfuscation.  There are ongoing
	efforts in the IETF to analyze and address these issues for
	the RADIUS protocol.
      </t>
    </section>

    <section title="Acknowledgements">
      <t>
	This document was written using xml2rfc, as described in
	<xref target="RFC7991"/>
      </t>
      <t>
	Some of the sections in this document were adapted from the
	description of the Status-Server RADIUS Packet Type Code in
	<xref target="RFC5997"/>.
      </t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &rfc2119;
      &rfc2865;
      &rfc8044;
    </references>
    <references title="Informative References">
      &rfc1321;
      &rfc2866;
      &rfc2869;
      &rfc3579;
      &rfc4270;
      &rfc4668;
      &rfc4669;
      &rfc4670;
      &rfc4671;
      &rfc5997;
      &rfc7991;
    </references>
  </back>
</rfc>

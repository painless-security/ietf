<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
	  <!ENTITY rfc7749 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.7749.xml'>
	  <!ENTITY rfc2119 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes"?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="6"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="info" docName="draft-donnelly-capport-detection-00.xml">
  <front>
    <title>Captive Portal Detection and Interaction</title>

    <author initials="M." surname="Donnelly" fullname="Mark Donnelly">
      <organization>Painless Security</organization>
      <address>
        <postal>
          <street>14 Summer Street, Suite 202</street>
          <city>Malden</city> <region>MA</region>
          <code>02148</code>
          <country>USA</country>
        </postal>
        <phone></phone>
        <email>mark@painless-security.com</email>
        <uri>http://www.painless-security.com</uri>
      </address>
    </author>

    <author initials="M." surname="Cullen" fullname="Margaret Cullen">
      <organization>Painless Security</organization>
      <address>
        <postal>
          <street>14 Summer Street, Suite 202</street>
          <city>Malden</city> <region>MA</region>
          <code>02148</code>
          <country>USA</country>
        </postal>
        <phone>+1 781 405-7464</phone>
        <email>margaret@painless-security.com</email>
        <uri>http://www.painless-security.com</uri>
      </address>
    </author>

    <date day="26" month="July" year="2016"/>

    <area>ART</area>

    <workgroup>Captive Portal WG</workgroup>

    <abstract>
      <t>

      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>

      </t>
    </section>

    <section title="Requirements Notation">
      <t>
	The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
	NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
	"OPTIONAL" in this document are to be interpreted as described
	in <xref target="RFC2119"/>.
      </t>
    </section>

    <section title="Workflow">
      <t>
        Captive portal automation consists of three phases.  The first 
        phase happens as part of the DHCP negotiation. (Margaret: How 
        would I phrase that for the IPv6 RA stuff?)  The second phase 
        consists of the captive portal client querying the captive 
        portal server for its requirements for accessing its protected 
        network, and submitting proofs of meeting those requirements.  
        In the third phase, the client is granted access to the 
        protected network and can query the captive portal for
        conditions of the access.
      </t>
      <t>
        During the first phase, the client acquires an IP address.  As
        part of the lease, the DHCP server returns an option to the 
        client specifying a URL for the captive portal protocol.
      </t>
      <t>
        During the second phase, the client accesses the URL provided 
        in the first phase.  The server responds with the current 
        status of the client and any requirements necessary to gain
        access to the protected network.  The client then submits 
        proofs of satisfying the access requirements to the server.  
        The server responds with the current status of the client and 
        any additional requirements necessary to gain access to the 
        protected network.  At the end of the second phase, all of the
        requirements are met; the server grants access to the protected
        network and responds with a status indicating the access.
      </t>
      <t>
        During the third phase, the client has access to the protected network.  The client may access the URL provided in the first phase again to query the current status.  The server responds with the current status of the client.
      </t>
    </section>

    <section title="DHCP Option">
      <t>
	In order to use the REST API defined in this document, the
	caller needs a URI that can be used to reach the Captive
	Portal.  Captive Portals that implement this specification
	SHOULD provide, and hosts MAY obtain, the required URI using
	the DHCP Captive-Portal Option [RFC7710]
      </t>
      <t>
	To provide backwards compatibility with the original use of
	the DHCP Captive Portal Option, the REST API defined in this
	document is exclusively accessed using HTTP Methods with a
	Content-Type of "json".  Captive Portals that implement the
	DHCP Captive-Portal Option MUST respond to an HTTP GET that
	has a Content-Type of "html" with HTML content that, when
	displayed in a web browser, will allow the user to
	interactively meet the Captive Portal conditions for network
	access.
      </t>
    </section>

    <section title="REST API">
      <section title="JSON Data Structures">
        <section title="CAPPORT Common Elements">
          <t>
  The CAPPORT data structures will share some common structure between 
  requests and responses.
          </t>

          <section title="Toplevel Object">
            <t>
  The CAPPORT API will contain JSON-formatted data.  The toplevel object contains a key named "networks" whose value is an array of zero or more network objects.  
            </t>
            <t>
              <figure>
                <artwork>
$toplevel = {
  $networks
}
                </artwork>
                <postamble>The toplevel request object</postamble>
              </figure>
            </t>
          </section>
          
          <section title="Networks Object">
            <t>
  The networks object is a JSON object whose keys are network names and
  whose values are network objects.  Thus a single response could be 
  used in gaining access to multiple protected networks at once.  The 
  first request to the CAPPORT API Server will contain no networks, and
  acts as a discovery request.
            </t>
            <t>
              <figure>
                <artwork>
$networks = {
  // = $network +
}
                </artwork>
                <postamble>The networks object</postamble>
              </figure>
            </t>
          </section>
          
          <section title="Network Object">
            <t>
  The network object represents a network protected by the Captive Portal.
            </t>
            <t>
              <figure>
                <artwork>
$network = {
  'conditions' : [ $condition + ] ,
  'state' : $network_state ? ,
  'details' : $network_details ?
}
                </artwork>
                <postamble>The network object</postamble>
              </figure>
            </t>
            
            <t>
  The network object MUST contain a 'requiremetents' key whose value is an array of one or more $condition objects, which represent the conditions for gaining access to this network.
            </t>
            <t>
  CAPPORT API Server responses MUST contain the 'state' key, whose value is the $network_state object, which represents the state of access that the User Equipment has to the network.  
            </t>
            <t>
  CAPPORT API Server responses SHOULD contain the 'details' key, whose value is the $network_details object, which provides relevant information about the network.
            </t>
          </section>
          
          <section title="Conditions Object">
            <t>
  The condition object describes one of the conditions necessary for access to the protected network.  The 
            </t>
            <t>
              <figure suppress-title="false" >
                <artwork xml:space="preserve" align="center" name="" type="" alt="" width="" height="">
$condition = {
  'id' : $uuid,
  'type' : string ? ,
  'requirement_details' : $requirement_details ? ,
  'satisfaction_details' : $satisfaction_details ?
}
                </artwork>
              </figure>
            </t>
            
            <t>
  The condition object MUST include an 'id' key whose value is a UUID that uniquely identifies this condition.  This ID will be used to match the client condition satisfactions with the server condition requirements.
            </t>
            
            <t>
  CAPPORT API Server responses MUST contain the 'type' key, whose value is a string that represents the type of condition that permits access to the network.
            </t>
            
            <t>
  CAPPORT API Server responses MUST contain the 'requirement_details' key, whose 
            </t>
          </section>
          
        </section>
        
        <section title="Captive Portal Request">
          
          


          <t>
  The requirement detail object 
          </t>
          <t>
            <figure>
              <artwork>
$requirement = {
  'id': $uuid,
  'details': $requirement_detail
}
              </artwork>
              <postamble>The requirement_detail object</postamble>
            </figure>
          </t>


          <t>
            <figure>
              <artwork>
$request = {
  "networks" : [ $network + ]
}

$network = {
  'id': string,
  'requirements' : [ $requirement + ]
}

$requirement = {
  'id': $uuid,
  'details': $detail
}

$uuid = string
              </artwork>
            </figure>
          </t>
        </section>
      
      
        <section title="Captive Portal Response">
          <t>
            <figure>
              <artwork>
$response = {
  "networks" : $networks
}

$networks = {
  $netname : $network +
}

; Network name can be any string
; "DEFAULT" has special meaning
$netname = ( "DEFAULT" | // )

$network = {
  "state"        : $state
  "requirements" : [ $requirement * ]
}

$state = {
  "permitted" : boolean
  "expires"   : datetime
}

$requirement = {
  'type'    : string,
  'id'      : $uuid,
  'details' : $detail
}

$uuid = string

$detail = {
  // : any +
}

              </artwork>
            </figure>
          </t>
        </section>
      
      
      
      
	<section title="Captive Portal Properties">
	  <t>
	    The captive portal properties data structure carries information about the captive portal itself, including the challenges required for greater network access:
	    <list hangIndent="8" style="hanging">
	      <t hangText="challenges">
		<list hangIndent="12" style="hanging">
		  <t hangText="required">True</t>
		  <t hangText="type">Challenge list structure</t>
		  <t hangText="description">
		    The list of challenges that a captive portal poses before a device is allowed access. The challenge list structure is defined in <xref target="data_structure_challenge_list" />.
		  </t>
		</list>
	      </t>

	      <!-- This really belongs somewhere else -->
	      <t hangText="terms">
		<list hangIndent="12" style="hanging">
		  <t hangText="required">False</t>
		  <t hangText="type">String</t>
		  <t hangText="description">
		    The text of the terms and conditions that the captive portal requires the user agree to before the user is allowed access.
		  </t>		  
		</list>
	      </t>
	      <t hangText="example">
		<list hangIndent="12" style="hanging">
		  <t hangText="required">False</t>
		  <t hangText="type"></t>
		  <t hangText="description"></t>		  
		</list>
	      </t>
	    </list>
	  </t>

	</section>
	<section title="Challenge List" anchor="data_structure_challenge_list">
	  <t>
	    The list of challenges that the captive portal will accept for granting access to the greater network.
	    <list hangIndent="8" style="hanging">
	      <t hangText="">
		<list hangIndent="12" style="hanging">
		  <t hangText="required">True</t>
		  <t hangText="type">Challenge list structure</t>
		  <t hangText="description">
		    The list of challenges that a captive portal poses before a device is allowed access. The challenge list structure is defined in <xref target="data_structure_challenge_list" />.
		  </t>
		</list>
	      </t>
	    </list>
	  </t>
	</section>
      </section>
      <section title="URIs">
	<t>
	  The URIs of the captive portal protocol will be calculated relative to the URI supplied by the DHCP server in the DHCP Captive-Portal Option defined in RFC 7710.
	</t>
	<section title="Captive Portal Properties">
	  <t>
	    Request: / (GET)
	  </t>
	  <t>
	    Response:
	  </t>
	</section>
      </section>
    </section>

    <section title="IANA Considerations">
      <t>
	This document does not require any IANA allocations.  Please
	remove this section before RFC publication.
      </t>
    </section>

    <section title="Security Considerations">
      <section title="Privacy Considerations">
      </section>
    </section>

    <section title="Acknowledgements">
      <t>
	This document was written using xml2rfc, as described in
	<xref target="RFC7749"/>

      </t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &rfc2119;
    </references>
    <references title="Informative References">
      &rfc7749;
    </references>
  </back>
</rfc>
